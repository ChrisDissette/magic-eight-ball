{"version":3,"sources":["components/Form.jsx","components/Display.jsx","components/Load.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","submitHandler","setUserName","setUserQuestion","Box","minHeight","display","alignItems","justifyContent","Paper","sx","height","width","xs","sm","md","lg","borderRadius","opacity","onSubmit","FormControl","TextField","label","onChange","event","target","value","required","mt","multiline","rows","Button","type","color","variant","Display","displayName","displayQuestion","answer","handleReset","textAlign","flexDirection","px","Typography","onClick","Load","p","CircularProgress","size","thickness","App","useState","userName","userQuestion","setDisplayName","setDisplayQuestion","setAnswer","submitInfo","setSubmitInfo","loading","setLoading","className","preventDefault","eightBall","Math","floor","random","console","log","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54401804.chunk.js","sourcesContent":["import Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Form = (props) => {\r\n\r\n    const {submitHandler, setUserName, setUserQuestion} = props\r\n\r\n    return (\r\n        <div>\r\n            <Box minHeight='95vh' display='flex' alignItems='center' justifyContent='center'>\r\n                <Paper sx={{height:500, width: {xs: 375, sm:450, md:600, lg:750}, display:'flex', alignItems:'center', justifyContent:'center', borderRadius:6, opacity:'92%'}}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <FormControl sx={{width: {xs:350, sm: 325, md: 400, lg:500}}}>\r\n                            <TextField label=\"Your Name\" \r\n                            onChange={(event) => {setUserName(event.target.value)}} \r\n                            required \r\n                            />\r\n\r\n                            <TextField label=\"What do you want to ask the Magic 8 Ball?\"\r\n                            sx={{mt:2}} \r\n                            onChange={(event) => {setUserQuestion(event.target.value)}} \r\n                            required \r\n                            multiline\r\n                            rows={4}\r\n                            />\r\n\r\n                            <Button type='submit' color='secondary' variant='contained' sx={{mt:1}}>Submit</Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Display = (props) => {\r\n\r\n    const { displayName, displayQuestion, answer, handleReset} = props\r\n\r\n    return (\r\n        <div>\r\n            <Box display='flex' alignItems='center' justifyContent='center'>\r\n                <Paper sx={{height:500, width: {xs: 300, sm:450, md:600, lg:750}, display:'flex', alignItems:'center', textAlign:'left', justifyContent:'center', flexDirection:'column', borderRadius:6, opacity:'92%', px:5}}>\r\n                    <Typography variant='h3'>Hey {displayName}, the Magic 8 Ball has spoken!</Typography>\r\n                    <br />\r\n                    <Typography variant='h5' textAlign='left'><span>Your Question:</span> {displayQuestion}</Typography>\r\n                    <br />\r\n                    <Typography variant='h5'><span>The Answer:</span> {answer}</Typography>\r\n                    <Button variant='contained' color='error' onClick={handleReset} sx={{mt:5}} >Reset</Button>\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nconst Load = (props) => {\r\n    return (\r\n        <div>\r\n            <Box display='flex' alignItems='center' justifyContent='center' flexDirection='column' minHeight='95vh'>\r\n                <Paper sx={{height:200, width: {xs: 300, sm:450, md:600, lg:750}, display:'flex', alignItems:'center', justifyContent:'center', borderRadius:6, opacity:'92%', p:5}}>\r\n                    <Typography variant='h2'>Hmm... let me think about that</Typography>\r\n                </Paper>\r\n                <br />\r\n                <CircularProgress size={150} thickness={10} color='secondary'/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Load\r\n","import {useState} from 'react'\nimport Form from './components/Form'\nimport Display from './components/Display'\nimport Load from './components/Load'\nimport Typography from '@mui/material/Typography';\n\n\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState(\"\")\n  const [userQuestion, setUserQuestion] = useState(\"\")\n  const [displayName, setDisplayName] = useState(\"\")\n  const [displayQuestion, setDisplayQuestion] = useState(\"\")\n  const [answer, setAnswer] = useState(\"\")\n  const [submitInfo, setSubmitInfo] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    let randomNumber = Math.floor(Math.random() * 8)\n    let eightBall = ''\n    switch(randomNumber){\n        case 0:\n            eightBall = 'It is certain'\n            break\n        case 1:\n            eightBall = 'It is decidely so'\n            break\n        case 2:\n            eightBall = 'Reply hazy try again'\n            break\n        case 3:\n            eightBall = 'Cannot predict now'\n            break\n        case 4:\n            eightBall = 'Do not count on it'\n            break\n        case 5:\n            eightBall = 'My sources say no'\n            break\n        case 6:\n            eightBall = 'Outlook not so good'\n            break\n        case 7:\n            eightBall = 'Signs point to yes'\n            break\n        default:\n            console.log('you need to try again')\n            break\n        }\n        setAnswer(eightBall)\n        setDisplayName(userName)\n        setDisplayQuestion(userQuestion)\n        setLoading(true)\n        const timer = setTimeout(() => {\n          setLoading(false)\n        }, 3000)\n        setSubmitInfo(true)\n}\n\n  const handleReset = () => {\n    setSubmitInfo(false)\n  }\n\n  return (\n    <div className=\"container\">\n      {\n        !submitInfo && loading===false ?\n        <Form submitHandler={submitHandler} setUserQuestion={setUserQuestion} setUserName={setUserName} setDisplayQuestion={setDisplayQuestion} setDisplayName={setDisplayName} />\n        : loading === true ?\n        <Load />\n        : submitInfo && loading===false ?\n        <Display displayQuestion={displayQuestion} displayName={displayName} answer={answer} handleReset={handleReset} />\n        : ''\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}